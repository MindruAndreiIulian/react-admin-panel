{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mindru Andrei\\\\Desktop\\\\react\\\\react-admin-panel\\\\src\\\\App.js\";\nimport React from 'react';\nimport UserList from './components/UserList';\nimport UserAddForm from './components/UserAddForm';\nimport './App.css';\nimport PostList from './components/PostList';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.submitAddForm = (event, name, email, salary, isGoldClient) => {\n      event.preventDefault();\n      console.log(this.checkEmail(email));\n      this.setState(prevState => {\n        return {\n          users: [...prevState.users, {\n            id: this.getMaxId(prevState.users) + 1,\n            name,\n            email,\n            salary,\n            isGoldClient\n          }]\n        };\n      });\n    };\n\n    this.deleteUser = id => {\n      const newUsers = this.state.users.filter(user => user.id !== id);\n      this.setState({\n        users: newUsers\n      });\n    };\n\n    this.state = {\n      background: 'white',\n      font: 'black',\n      users: [],\n      posts: [],\n      toggleUsers: true,\n      togglePosts: true\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(data => {\n      data = data.filter(user => user.id < 3);\n      data.forEach(user => {\n        user.isGoldClient = false;\n      });\n      this.setState({\n        users: data\n      });\n    });\n    fetch('https://jsonplaceholder.typicode.com/posts').then(response => response.json()).then(data => {\n      data = data.filter(post => post.id < 4);\n      this.setState({\n        posts: data\n      });\n    });\n  }\n\n  changeColor(event) {\n    this.setState({\n      background: event.target.value\n    });\n  }\n\n  changeTextColor(event) {\n    this.setState({\n      color: event.target.value\n    });\n  }\n\n  getMaxId(users) {\n    let maxId = 0;\n    users.forEach(user => {\n      if (user.id > maxId) {\n        maxId = user.id;\n      }\n    });\n    return maxId;\n  }\n\n  handleTogglePosts() {\n    this.state.togglePosts ? this.setState({\n      togglePosts: false\n    }) : this.setState({\n      togglePosts: true\n    });\n  }\n\n  handleToggleUsers() {\n    this.state.toggleUsers ? this.setState({\n      toggleUsers: false\n    }) : this.setState({\n      toggleUsers: true\n    });\n  }\n\n  checkEmail(email) {\n    return email.includes('@');\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"app\",\n      style: {\n        background: this.state.background,\n        color: this.state.color\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Admin panel - Proiectul 1\"), React.createElement(UserAddForm, {\n      submitAddForm: (event, name, salary, email, isGoldClient) => this.submitAddForm(event, name, salary, email, isGoldClient),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), this.state.toggleUsers ? React.createElement(UserList, {\n      users: this.state.users,\n      deleteUser: id => this.deleteUser(id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }) : null, React.createElement(\"button\", {\n      onClick: () => this.handleToggleUsers(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Afiseaze/Ascunde userii\"), this.state.togglePosts ? React.createElement(PostList, {\n      posts: this.state.posts,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }) : null, React.createElement(\"button\", {\n      onClick: () => this.handleTogglePosts(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Afiseaze/Ascunde postarile\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Schimba culoarea fundalului:\"), React.createElement(\"input\", {\n      type: \"color\",\n      onChange: event => this.changeColor(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Schimba culoarea fontului:\"), React.createElement(\"input\", {\n      type: \"color\",\n      onChange: event => this.changeTextColor(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Mindru Andrei\\Desktop\\react\\react-admin-panel\\src\\App.js"],"names":["React","UserList","UserAddForm","PostList","App","Component","constructor","submitAddForm","event","name","email","salary","isGoldClient","preventDefault","console","log","checkEmail","setState","prevState","users","id","getMaxId","deleteUser","newUsers","state","filter","user","background","font","posts","toggleUsers","togglePosts","componentDidMount","fetch","then","response","json","data","forEach","post","changeColor","target","value","changeTextColor","color","maxId","handleTogglePosts","handleToggleUsers","includes","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport UserList from './components/UserList';\r\nimport UserAddForm from './components/UserAddForm';\r\nimport './App.css';\r\nimport PostList from './components/PostList';\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      background: 'white',\r\n      font:'black',\r\n      users: [],\r\n      posts:[],\r\n      toggleUsers:true,\r\n      togglePosts:true\r\n      \r\n      \r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        data = data.filter(user => user.id < 3);\r\n        data.forEach(user => {\r\n          user.isGoldClient = false;\r\n        });\r\n        this.setState({users: data});\r\n      })\r\n\r\n\r\n      fetch('https://jsonplaceholder.typicode.com/posts')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        data= data.filter(post => post.id < 4)\r\n        \r\n        \r\n        this.setState({posts:data});\r\n        \r\n      })\r\n\r\n\r\n\r\n  }\r\n\r\n  changeColor(event) {\r\n    this.setState({background: event.target.value});\r\n  }\r\n\r\n  changeTextColor(event){\r\n    this.setState({color:event.target.value});\r\n  }\r\n\r\n  getMaxId(users) {\r\n    let maxId = 0;\r\n\r\n    users.forEach(user => {\r\n      if (user.id > maxId) {\r\n        maxId = user.id;\r\n      }\r\n    });\r\n\r\n    return maxId;\r\n  }\r\n\r\n  handleTogglePosts(){\r\n    this.state.togglePosts?\r\n        this.setState({togglePosts:false}):\r\n        this.setState({togglePosts:true}) ;    \r\n\r\n  }\r\n\r\n  handleToggleUsers(){\r\n    this.state.toggleUsers?\r\n        this.setState({toggleUsers:false}):\r\n        this.setState({toggleUsers:true}) ;\r\n  }\r\n\r\n  checkEmail(email){\r\n    \r\n    return email.includes('@');\r\n  }\r\n\r\n  submitAddForm=(event,name,email,salary,isGoldClient)=> {\r\n    \r\n    event.preventDefault();\r\n    console.log(this.checkEmail(email));\r\n    this.setState(prevState => {\r\n      return {\r\n        users: [\r\n          ...prevState.users,\r\n          {\r\n            id: this.getMaxId(prevState.users) + 1,\r\n            name,\r\n            email,\r\n            salary,\r\n            isGoldClient\r\n          }\r\n        ]\r\n      }\r\n    });\r\n \r\n\r\n  }\r\n\r\n  deleteUser = (id) => {\r\n    const newUsers = this.state.users.filter(user => user.id !== id)\r\n    this.setState({ users: newUsers} )\r\n\r\n\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"app\" style={{background: this.state.background,color:this.state.color}}>\r\n        <h1>Admin panel - Proiectul 1</h1>\r\n        \r\n        <UserAddForm submitAddForm={(event, name,salary, email, isGoldClient) => this.submitAddForm(event, name,salary, email, isGoldClient)}/>\r\n        { this.state.toggleUsers?\r\n              <UserList users={this.state.users} deleteUser={(id) => this.deleteUser(id)}/> :\r\n              null\r\n        }\r\n        <button onClick={ () => this.handleToggleUsers()} >Afiseaze/Ascunde userii</button>\r\n        {   this.state.togglePosts?\r\n              <PostList posts={this.state.posts}/> : \r\n              null\r\n        }\r\n        <button onClick={ () => this.handleTogglePosts()} >Afiseaze/Ascunde postarile</button>\r\n        \r\n\r\n        <p>Schimba culoarea fundalului:</p>\r\n        <input type=\"color\" onChange={(event) => this.changeColor(event)}/>\r\n        <p>Schimba culoarea fontului:</p>\r\n        <input type=\"color\" onChange={(event) => this.changeTextColor(event)}/>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mindru Andrei\\\\Desktop\\\\react\\\\react-admin-panel\\\\src\\\\App.js\";\nimport React from 'react';\nimport UserList from './components/UserList';\nimport UserAddForm from './components/UserAddForm';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      background: 'white',\n      users: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(data => {\n      data = data.filter(user => user.id < 4);\n      data.forEach(user => {\n        user.isGoldClient = false;\n      });\n      this.setState({\n        users: data\n      });\n    });\n  }\n\n  changeColor(event) {\n    this.setState({\n      background: event.target.value\n    });\n  }\n\n  getMaxId(users) {\n    let maxId = 0;\n    users.forEach(user => {\n      if (user.id > maxId) {\n        maxId = user.id;\n      }\n    });\n    return maxId;\n  }\n\n  submitAddForm(event, name, email, salary, image, isGoldClient) {\n    event.preventDefault();\n    this.setState(prevState => {\n      return {\n        users: [...prevState.users, {\n          id: this.getMaxId(prevState.users) + 1,\n          name,\n          email,\n          image,\n          salary,\n          isGoldClient\n        }]\n      };\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"app\",\n      style: {\n        background: this.state.background\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Admin panel - Proiectul 1\"), React.createElement(UserAddForm, {\n      submitAddForm: (event, name, salary, email, image, isGoldClient) => this.submitAddForm(event, name, salary, email, image, isGoldClient),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(UserList, {\n      users: this.state.users,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"color\",\n      onChange: event => this.changeColor(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Mindru Andrei\\Desktop\\react\\react-admin-panel\\src\\App.js"],"names":["React","UserList","UserAddForm","App","Component","constructor","state","background","users","componentDidMount","fetch","then","response","json","data","filter","user","id","forEach","isGoldClient","setState","changeColor","event","target","value","getMaxId","maxId","submitAddForm","name","email","salary","image","preventDefault","prevState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,OADD;AAEXC,MAAAA,KAAK,EAAE;AAFI,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZA,MAAAA,IAAI,GAAGA,IAAI,CAACC,MAAL,CAAYC,IAAI,IAAIA,IAAI,CAACC,EAAL,GAAU,CAA9B,CAAP;AACAH,MAAAA,IAAI,CAACI,OAAL,CAAaF,IAAI,IAAI;AACnBA,QAAAA,IAAI,CAACG,YAAL,GAAoB,KAApB;AACD,OAFD;AAGA,WAAKC,QAAL,CAAc;AAACZ,QAAAA,KAAK,EAAEM;AAAR,OAAd;AACD,KARH;AASD;;AAEDO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,SAAKF,QAAL,CAAc;AAACb,MAAAA,UAAU,EAAEe,KAAK,CAACC,MAAN,CAAaC;AAA1B,KAAd;AACD;;AAEDC,EAAAA,QAAQ,CAACjB,KAAD,EAAQ;AACd,QAAIkB,KAAK,GAAG,CAAZ;AAEAlB,IAAAA,KAAK,CAACU,OAAN,CAAcF,IAAI,IAAI;AACpB,UAAIA,IAAI,CAACC,EAAL,GAAUS,KAAd,EAAqB;AACnBA,QAAAA,KAAK,GAAGV,IAAI,CAACC,EAAb;AACD;AACF,KAJD;AAMA,WAAOS,KAAP;AACD;;AAEDC,EAAAA,aAAa,CAACL,KAAD,EAAQM,IAAR,EAAcC,KAAd,EAAoBC,MAApB,EAA2BC,KAA3B,EAAkCZ,YAAlC,EAAgD;AAC3DG,IAAAA,KAAK,CAACU,cAAN;AACA,SAAKZ,QAAL,CAAca,SAAS,IAAI;AACzB,aAAO;AACLzB,QAAAA,KAAK,EAAE,CACL,GAAGyB,SAAS,CAACzB,KADR,EAEL;AACES,UAAAA,EAAE,EAAE,KAAKQ,QAAL,CAAcQ,SAAS,CAACzB,KAAxB,IAAiC,CADvC;AAEEoB,UAAAA,IAFF;AAGEC,UAAAA,KAHF;AAIEE,UAAAA,KAJF;AAKED,UAAAA,MALF;AAMEX,UAAAA;AANF,SAFK;AADF,OAAP;AAaD,KAdD;AAeD;;AAEDe,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,KAAK,EAAE;AAAC3B,QAAAA,UAAU,EAAE,KAAKD,KAAL,CAAWC;AAAxB,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,EAEE,oBAAC,WAAD;AAAa,MAAA,aAAa,EAAE,CAACe,KAAD,EAAQM,IAAR,EAAaE,MAAb,EAAqBD,KAArB,EAA2BE,KAA3B,EAAkCZ,YAAlC,KAAmD,KAAKQ,aAAL,CAAmBL,KAAnB,EAA0BM,IAA1B,EAA+BE,MAA/B,EAAuCD,KAAvC,EAA6CE,KAA7C,EAAoDZ,YAApD,CAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE,KAAKb,KAAL,CAAWE,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,QAAQ,EAAGc,KAAD,IAAW,KAAKD,WAAL,CAAiBC,KAAjB,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AAQD;;AAjE+B;;AAoElC,eAAenB,GAAf","sourcesContent":["import React from 'react';\r\nimport UserList from './components/UserList';\r\nimport UserAddForm from './components/UserAddForm';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      background: 'white',\r\n      users: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        data = data.filter(user => user.id < 4);\r\n        data.forEach(user => {\r\n          user.isGoldClient = false;\r\n        });\r\n        this.setState({users: data});\r\n      })\r\n  }\r\n\r\n  changeColor(event) {\r\n    this.setState({background: event.target.value});\r\n  }\r\n\r\n  getMaxId(users) {\r\n    let maxId = 0;\r\n\r\n    users.forEach(user => {\r\n      if (user.id > maxId) {\r\n        maxId = user.id;\r\n      }\r\n    });\r\n\r\n    return maxId;\r\n  }\r\n\r\n  submitAddForm(event, name, email,salary,image, isGoldClient) {\r\n    event.preventDefault();\r\n    this.setState(prevState => {\r\n      return {\r\n        users: [\r\n          ...prevState.users,\r\n          {\r\n            id: this.getMaxId(prevState.users) + 1,\r\n            name,\r\n            email,\r\n            image,\r\n            salary,\r\n            isGoldClient\r\n          }\r\n        ]\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"app\" style={{background: this.state.background}}>\r\n        <h1>Admin panel - Proiectul 1</h1>\r\n        <UserAddForm submitAddForm={(event, name,salary, email,image, isGoldClient) => this.submitAddForm(event, name,salary, email,image, isGoldClient)}/>\r\n        <UserList users={this.state.users}/>\r\n        <input type=\"color\" onChange={(event) => this.changeColor(event)}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}